configs:
  cm:
    admin.enabled: "false"
    users.anonymous.enabled: "false"
    url: https://mint.local/cd
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/keycloak/
    oidc.tls.insecure.skip.verify: "true"
    oidc.config: |
      name: Keycloak
      issuer: https://mysticstorage.local:9443/realms/devops
      clientID: argo-cd
      clientSecret: CIhq5DJJw1ovAKL26x4NLUsSFJLo604N
      requestedIDTokenClaims:
        groups:
          essential: true
      requestedScopes:
        - openid
        - profile
        - roles
        - groups
  rbac:
    create: true
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/
    policy.default: 'role:readonly'
    policy.csv: |
      g, argo-cd-admin, role:admin
      g, argo-cd-readonly, role:readonly
global:
  domain: "" # used as host by ingress
server:
  extraArgs:
    - --rootpath
    - /cd
  service:
    type: ClusterIP
  ingress:
    enabled: true
    tls: false
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /cd/$2
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/protocol: https # Traefik
      nginx.ingress.kubernetes.io/backend-protocol: https # ingress-nginx
    ingressClassName: nginx
    path: /cd(/|$)(.*)
    pathType: Prefix
  envFrom:
    - configMapRef:
        name: proxy-env-mp
controller:
  envFrom:
    - configMapRef:
        name: proxy-env-mp
dex:
  enabled: false
  envFrom:
    - configMapRef:
        name: proxy-env-mp
redis:
  envFrom:
    - configMapRef:
        name: proxy-env-mp
repoServer:
  envFrom:
    - configMapRef:
        name: proxy-env-mp
notifications:
  envFrom:
    - configMapRef:
        name: proxy-env-mp
extraObjects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: proxy-env-mp
    data:
      http_proxy: ""
      https_proxy: ""
      no_proxy: ""
